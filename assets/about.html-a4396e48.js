import{_ as i,p as e,q as t,s as l,Y as o}from"./framework-e1bed10d.js";const r={},n=l("div",{class:"custom-container tip"},[l("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[l("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[l("circle",{cx:"12",cy:"12",r:"9"}),l("path",{d:"M12 8h.01"}),l("path",{d:"M11 12h1v4h1"})])]),l("p",{class:"custom-container-title"},"介绍"),l("ul",null,[l("li",null,"🔭 最近在写一些关于 React、Vue、TypeScript 和 Node 的总结。"),l("li",null,"🤔 我这阶段的任务是夯实基础。"),l("li",null,"💼 我是一名前端工程师。"),l("li",null,"🌱 对探索低代码方向抱有兴趣。")])],-1),a=o('<h2 id="项目经历" tabindex="-1"><a class="header-anchor" href="#项目经历" aria-hidden="true">#</a> 项目经历</h2><h3 id="papi" tabindex="-1"><a class="header-anchor" href="#papi" aria-hidden="true">#</a> PAPI</h3><p>服务于线下用户进行前后端联调的工具，提供 API 管理和数据 Mock 的能力。</p><ul><li>后端技术 <ul><li><strong>语言/框架</strong>：Node、PM2、TypeScript</li><li><strong>数据库</strong>：MySQL、TypeORM</li></ul></li><li>前端技术 <ul><li><strong>语言/框架</strong>：React、Ant、TypeScript</li><li><strong>配套工具</strong>：Redux、React Router</li><li><strong>打包构建工具</strong>：Webpack</li></ul></li><li>前后端通信 <ul><li>WebSocket+nisper</li></ul></li></ul><p>项目中的亮/难点：</p><ol><li>前后端采用 WebSocket 通信极大提高用户访问 API 页面的速度</li><li>多分支管理项目 API 功能方便用户以项目为维度进行多人多次开发交互</li><li>根据定义的返回数据格式/类型进行 Mock，方便用户更好的调试，减少因为后端接口未完成前端被卡的痛点</li></ol><h3 id="可能会问的问题" tabindex="-1"><a class="header-anchor" href="#可能会问的问题" aria-hidden="true">#</a> 可能会问的问题</h3><ol><li>整个项目的构建+部署流程怎么做的？</li><li>用户管理怎样做的？</li><li>为什么用 WebSocket？它和 http 有啥区别？</li><li>讲讲多分支管理项目？和 Git 分支有啥不同？</li><li>Mock 功能怎么搞的？市面上有哪些 Mock 功能？为什么不用</li></ol>',8),c=[n,a];function s(d,h){return e(),t("div",null,c)}const p=i(r,[["render",s],["__file","about.html.vue"]]);export{p as default};
